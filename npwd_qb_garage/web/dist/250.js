"use strict";(self.webpackChunkgarage=self.webpackChunkgarage||[]).push([[250],{6689:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(5949),a=n(5893);const o=(0,r.Z)([(0,a.jsx)("circle",{cx:"15",cy:"13",r:"1"},"0"),(0,a.jsx)("circle",{cx:"9",cy:"13",r:"1"},"1"),(0,a.jsx)("path",{d:"m8.33 7.5-.66 2h8.66l-.66-2z"},"2"),(0,a.jsx)("path",{d:"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 15.69c0 .45-.35.81-.78.81h-.44c-.44 0-.78-.36-.78-.81V16.5H7v1.19c0 .45-.35.81-.78.81h-.44c-.43 0-.78-.36-.78-.81v-6.5c.82-2.47 1.34-4.03 1.56-4.69.05-.16.12-.29.19-.4.02-.02.03-.04.05-.06.38-.53.92-.54.92-.54h8.56s.54.01.92.53c.02.03.03.05.05.07.07.11.14.24.19.4.22.66.74 2.23 1.56 4.69v6.5z"},"3")],"Garage")},4121:(e,t,n)=>{n.d(t,{x:()=>l});var r=n(2950),a=n.n(r),o=n(6689),l=function(){return a().createElement(o.Z,{fontSize:"large"})}},9250:(e,t,n)=>{n.r(t),n.d(t,{externalAppConfig:()=>l,default:()=>c});var r=n(4023),a=n(4121),o=n(4274),l=function(){return{id:"garage",nameLocale:"Garage",color:"#fff",backgroundColor:"#795548",path:"/garage",icon:a.x,app:r.Z,theme:o.rS}};const c=l},4023:(e,t,n)=>{n.d(t,{Z:()=>v});var r,a,o=n(2950),l=n.n(o),c=n(5475),i=n(6235),s=n(3839),u=n.n(s),d=n(8440),m=n(4810),p=n(5974),f=n(6867),Z=n(2658),x=n(4669),h=n(4958),g=n(7405),E=function(){return E=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},E.apply(this,arguments)},b=u().div(w||(r=["\n  flex: 1;\n  padding: 1.5rem;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"],a=["\n  flex: 1;\n  padding: 1.5rem;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"],Object.defineProperty?Object.defineProperty(r,"raw",{value:a}):r.raw=a,w=r),(function(e){return e.isDarkMode&&"\n    background-color: #212121;\n  "})),y=function(e){var t=(0,i.useHistory)(),n=(0,o.useState)([]),r=n[0],a=n[1],c=(0,o.useState)(null),s=c[0],u=c[1],E="dark"===e.theme.palette.mode;return(0,o.useEffect)((function(){(0,g.Z)("npwd:qb-garage:getVehicles").then((function(e){a(e.data)}))}),[]),(0,o.useEffect)((function(){if(r){var e=null==r?void 0:r.reduce((function(e,t){return e[t.type]||(e[t.type]=[]),e[t.type].push(t),e}),{});u(e)}}),[r]),l().createElement(m.Z,{injectFirst:!0},l().createElement(p.Z,{theme:e.theme},l().createElement(b,{isDarkMode:E},l().createElement(d.h,null,l().createElement(f.Z,{color:"primary",onClick:function(){return t.goBack()}},l().createElement(x.Z,null)),l().createElement(Z.Z,{fontSize:24,color:"primary",fontWeight:"bold"},"Garage")),s&&l().createElement(h.Y,{isDarkMode:E,vehicles:s}))))};const v=function(e){return l().createElement(c.NuiProvider,null,l().createElement(y,E({},e)))};var w},4274:(e,t,n)=>{n.d(t,{rS:()=>c});var r=n(3486),a=n(6115),o=r.Z[500],l=a.Z.white,c={palette:{primary:{main:o,dark:r.Z[700],light:r.Z[300],contrastText:l},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:l},success:{main:"#2196f3",contrastText:l}}}},9589:(e,t,n)=>{n.d(t,{Z:()=>g});var r=n(2950),a=n.n(r),o=n(2440),l=n(799),c=n(700),i=n(4755),s=n(8584),u=n(2658),d=n(1508),m=n(6914),p=n(4637),f=n(9308),Z=n(2753),x=n(6024),h=n(7405);const g=function(e){var t=e.veh;return a().createElement(a().Fragment,null,a().createElement(o.Z,{sx:{width:"70%"}},a().createElement(l.ZP,{disablePadding:!0,sx:{borderBottom:"1px solid white",mb:"8px"}},a().createElement(c.Z,{sx:{ml:"5px",mr:"20px",minWidth:"25px"}},a().createElement(i.Z,{title:"Location"},a().createElement(f.Z,null))),a().createElement(s.Z,{primary:t.garageLabel})),a().createElement(l.ZP,{disablePadding:!0,sx:{borderBottom:"1px solid white",mb:"8px"}},a().createElement(c.Z,{sx:{ml:"5px",mr:"20px",minWidth:"25px"}},a().createElement(i.Z,{title:"Engine"},a().createElement(x.Z,null))),a().createElement(s.Z,{primary:a().createElement(u.Z,null,Math.ceil(t.engine/10),"%")})),a().createElement(l.ZP,{disablePadding:!0,sx:{borderBottom:"1px solid white",mb:"8px"}},a().createElement(c.Z,{sx:{ml:"5px",mr:"20px",minWidth:"25px"}},a().createElement(i.Z,{title:"Fuel"},a().createElement(Z.Z,null))),a().createElement(s.Z,{primary:a().createElement(u.Z,null,Math.ceil(t.fuel),"%")})),a().createElement(l.ZP,{disablePadding:!0,sx:{borderBottom:"1px solid white",mb:"8px"}},a().createElement(c.Z,{sx:{ml:"5px",mr:"20px",minWidth:"25px"}},a().createElement(i.Z,{title:"Body"},a().createElement(p.Z,null))),a().createElement(s.Z,{primary:a().createElement(u.Z,null,Math.ceil(t.body/10),"%")}))),a().createElement(d.Z,{sx:{display:"flex"}},a().createElement(m.Z,{color:"primary",variant:"contained",onClick:function(){return e=t.plate,n=t.state,r=t.garage,void(0,h.Z)("npwd:qb-garage:requestWaypoint",{plate:e,state:n,garage:r});var e,n,r}},"Track"),a().createElement(m.Z,{color:"secondary",variant:"contained",onClick:function(){return e=t.plate,void(0,h.Z)("npwd:qb-garage:reportStolen",{plate:e});var e}},"Report Stolen")))}},4958:(e,t,n)=>{n.d(t,{Y:()=>k});var r=n(1508),a=n(2440),o=n(8277),l=n(2981),c=n(799),i=n(7903),s=n(7425),u=n(6447),d=n(2658),m=n(5092),p=n(5137),f=n(3486),Z=n(265),x=n(7036),h=n(2950),g=n.n(h),E=n(6559),b=n(9521),y=n(4637),v=n(327),w=n(9589),k=function(e){var t=e.vehicles,n=(e.isDarkMode,(0,h.useState)("car")),k=n[0],S=n[1],z={car:{icon:g().createElement(y.Z,{sx:{fontSize:35}}),status:{out:p.Z[500],garaged:f.Z[500],impounded:Z.Z[500],seized:Z.Z[500],unknown:x.Z[500]}},aircraft:{icon:g().createElement(E.Z,{sx:{fontSize:35}}),status:{out:p.Z[500],garaged:f.Z[500],impounded:Z.Z[500],seized:Z.Z[500],unknown:x.Z[500]}},boat:{icon:g().createElement(v.Z,{sx:{fontSize:35}}),status:{out:p.Z[500],garaged:f.Z[500],impounded:Z.Z[500],seized:Z.Z[500],unknown:x.Z[500]}},bike:{icon:g().createElement(b.Z,{sx:{fontSize:35}}),status:{out:p.Z[500],garaged:f.Z[500],impounded:Z.Z[500],seized:Z.Z[500],unknown:x.Z[500]}}};return g().createElement(r.Z,null,Object.keys(t).map((function(e){return g().createElement(a.Z,{subheader:g().createElement(o.Z,{sx:{cursor:"pointer",position:"static"},onClick:function(){S(e)}},e.toUpperCase())},g().createElement(l.Z,{in:k===e},t[e].map((function(e){return g().createElement(c.ZP,null,g().createElement(i.Z,{sx:{width:"100%",borderBottom:"4px solid",borderBottomColor:z[e.type].status[e.state]}},g().createElement(s.Z,null,g().createElement(r.Z,{sx:{display:"flex",justifyContent:"space-between",width:"100%",alignItems:"center"}},g().createElement(r.Z,{sx:{display:"flex",gap:3,alignItems:"center"}},z[e.type].icon,g().createElement(u.Z,{spacing:1},g().createElement(d.Z,{sx:{fontSize:15}},e.brand+" "+e.vehicle),g().createElement(d.Z,{sx:{fontSize:15}},e.plate))),g().createElement(d.Z,{sx:{fontSize:14}},e.state.toUpperCase()))),g().createElement(m.Z,{sx:{display:"flex",justifyContent:"center",alignItems:"center",flexDirection:"column"}},g().createElement(w.Z,{veh:e}))))}))))})))}},8440:(e,t,n)=>{n.d(t,{h:()=>a});var r=n(3839),a=n.n(r)()("div")({width:"100%",justifyContent:"flex-start",display:"flex",alignItems:"center",gap:20,marginBottom:20})},7405:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(5181);const a=function(e,t,n){return a=this,o=void 0,c=function(){var a;return function(e,t){var n,r,a,o,l={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function c(o){return function(c){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;l;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,r=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!((a=(a=l.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){l=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){l.label=o[1];break}if(6===o[0]&&l.label<a[1]){l.label=a[1],a=o;break}if(a&&l.label<a[2]){l.label=a[2],l.ops.push(o);break}a[2]&&l.ops.pop(),l.trys.pop();continue}o=t.call(e,l)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,c])}}}(this,(function(o){switch(o.label){case 0:return a={method:"post",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(t)},(0,r.Id)()&&n?[2,n]:[4,fetch("https://".concat("npwd_qb_garage","/").concat(e),a)];case 1:return[4,o.sent().json()];case 2:return[2,o.sent()]}}))},new((l=void 0)||(l=Promise))((function(e,t){function n(e){try{i(c.next(e))}catch(e){t(e)}}function r(e){try{i(c.throw(e))}catch(e){t(e)}}function i(t){var a;t.done?e(t.value):(a=t.value,a instanceof l?a:new l((function(e){e(a)}))).then(n,r)}i((c=c.apply(a,o||[])).next())}));var a,o,l,c}},5181:(e,t,n)=>{n.d(t,{Id:()=>r});var r=function(){return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,