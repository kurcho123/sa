"use strict";(self.webpackChunknpwd_qb_mail=self.webpackChunknpwd_qb_mail||[]).push([[250],{891:(e,n,t)=>{var r=t(4836);n.Z=void 0;var a=r(t(4938)),l=t(5893),o=(0,a.default)((0,l.jsx)("path",{d:"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z"}),"Email");n.Z=o},4121:(e,n,t)=>{t.d(n,{b:()=>o,s:()=>c});var r=t(2950),a=t.n(r),l=t(891),o=function(){return a().createElement(l.Z,{fontSize:"large"})},c=function(){return a().createElement(l.Z,{fontSize:"small"})}},9250:(e,n,t)=>{t.r(n),t.d(n,{externalAppConfig:()=>o,default:()=>c});var r=t(4023),a=t(4121),l=t(4274),o=function(){return{id:"mail",nameLocale:"Mail",color:"#fff",backgroundColor:"#333",path:"/mail",icon:a.b,app:r.Z,notificationIcon:a.s,theme:l.rS}};const c=o},4023:(e,n,t)=>{t.d(n,{Z:()=>k});var r,a,l=t(2950),o=t.n(l),c=t(5475),i=t(3839),u=t.n(i),f=t(4810),d=t(5974),m=t(620),s=t(5137),p=t(4530),b=t(1551),h=t(4714),Z=t(602),v=function(){return v=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},v.apply(this,arguments)},x=u().div(E||(r=["\n  flex: 1;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"],a=["\n  flex: 1;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"],Object.defineProperty?Object.defineProperty(r,"raw",{value:a}):r.raw=a,E=r),(function(e){return e.isDarkMode&&"\n    background-color: #212121;\n  "})),g=function(e){var n="dark"===e.theme.palette.mode;return o().createElement(s.RecoilRoot,null,o().createElement(Z.Z,null,o().createElement(f.Z,{injectFirst:!0},o().createElement(d.Z,{theme:e.theme},o().createElement(h.v,null),o().createElement(x,{isDarkMode:n},o().createElement(b.Z,null),o().createElement(p.Z,null),o().createElement(m.Z,{isDarkMode:n}))))))};const k=function(e){return o().createElement(c.NuiProvider,null,o().createElement(g,v({},e)))};var E},4274:(e,n,t)=>{t.d(n,{A1:()=>l,Iw:()=>o,rS:()=>c});var r=t(265),a=t(6115),l=r.Z[900],o=a.Z.white,c={palette:{primary:{main:l,dark:r.Z[900],light:r.Z[500],contrastText:o},secondary:{main:r.Z[500],dark:r.Z[900],light:r.Z[500],contrastText:o}}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,